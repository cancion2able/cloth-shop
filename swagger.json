{ 
    "swagger":"2.0",
    "info":{ 
       "description":"This is a sample API for Spring Boot application for EPAM's Internal Lab program.",
       "version":"1.0.0",
       "title":"Cloth Shop",
       "contact":{ 
          "email":"stanislav_ovsyankin@epam.com"
       },
       "license":{ 
          "name":"Apache 2.0",
          "url":"http://www.apache.org/licenses/LICENSE-2.0.html"
       }
    },
    "host":"localhost:8080",
    "basePath":"/api",
    "tags":[ 
       { 
          "name":"category",
          "description":"Categories of our awesome products"
       },
       { 
          "name":"order",
          "description":"Access to orders"
       },
       { 
          "name":"user",
          "description":"Operations with user"
       },
       { 
         "name":"product",
         "description":"Awesome products"
       },
       { 
         "name":"vendor",
         "description":"Vendors that manifacture awesome products"
       }
    ],
    "schemes":[
       "http"
    ],
    "paths":{
       "/categories":{
         "get":{ 
            "tags":[ 
               "category"
            ],
            "summary":"Product categories",
            "description":"Lists all the product categories",
            "operationId":"findAllCategories",
            "produces":[ 
               "application/json"
            ],
            "responses":{ 
               "200":{ 
                  "description":"successful operation",
                  "schema":{ 
                     "type":"array",
                     "items":{ 
                        "$ref":"#/definitions/Category"
                     }
                  }
               }
            }
         }
       },
       "/categories/{id}":{
         "get":{ 
            "tags":[ 
               "category"
            ],
            "summary":"Individual category",
            "description":"Get a category by id",
            "operationId":"findCategoryById",
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"id",
                  "in":"path",
                  "description":"ID of category to return",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"successful operation",
                  "schema":{ 
                     "$ref":"#/definitions/Category"
                  }
               }
            }
         }
       }, 
       "/users":{
            "get":{ 
               "tags":[ 
                  "user"
               ],
               "summary":"All customers",
               "description":"Lists of all customers",
               "operationId":"findAllUsers",
               "produces":[ 
                  "application/json"
               ],
               "responses":{ 
                  "200":{ 
                     "description":"successful operation",
                     "schema":{ 
                        "type":"array",
                        "items":{ 
                           "$ref":"#/definitions/User"
                        }
                     }
                  }
               }
            },
          "post":{ 
             "tags":[ 
                "user"
             ],
             "summary":"Create user",
             "description":"This can only be done by the logged in user.",
             "operationId":"createUser",
             "produces":[
                "application/json"
             ],
             "parameters":[ 
                { 
                   "in":"body",
                   "name":"body",
                   "description":"Created user object",
                   "required":true,
                   "schema":{ 
                      "$ref":"#/definitions/User"
                   }
                }
             ],
             "responses":{ 
                "default":{ 
                   "description":"successful operation"
                }
             }
          }
       },
       "/users/login":{ 
          "get":{ 
             "tags":[ 
                "user"
             ],
             "summary":"Logs user into the system",
             "description":"",
             "operationId":"loginUser",
             "produces":[ 
                "application/json"
             ],
             "parameters":[ 
                { 
                   "name":"username",
                   "in":"query",
                   "description":"The user name for login",
                   "required":true,
                   "type":"string"
                },
                { 
                   "name":"password",
                   "in":"query",
                   "description":"The password for login in clear text",
                   "required":true,
                   "type":"string"
                }
             ],
             "responses":{ 
                "200":{ 
                   "description":"successful operation",
                   "schema":{ 
                      "type":"string"
                   },
                   "headers":{ 
                      "X-Rate-Limit":{ 
                         "type":"integer",
                         "format":"int32",
                         "description":"calls per hour allowed by the user"
                      },
                      "X-Expires-After":{ 
                         "type":"string",
                         "format":"date-time",
                         "description":"date in UTC when token expires"
                      }
                   }
                },
                "400":{ 
                   "description":"Invalid username/password supplied"
                }
             }
          }
       },
       "/users/logout":{ 
          "get":{ 
             "tags":[ 
                "user"
             ],
             "summary":"Logs out current logged in user session",
             "description":"",
             "operationId":"logoutUser",
             "produces":[ 
                "application/xml",
                "application/json"
             ],
             "parameters":[ 
 
             ],
             "responses":{ 
                "default":{ 
                   "description":"successful operation"
                }
             }
          }
       },
       "/users/{id}":{ 
          "get":{ 
             "tags":[ 
                "user"
             ],
             "summary":"Get user by id",
             "description":"",
             "operationId":"getUserById",
             "produces":[ 
                "application/json"
             ],
             "parameters":[ 
                { 
                   "name":"id",
                   "in":"path",
                   "description":"User id that needs to be fetched.",
                   "required":true,
                   "type":"integer",
                   "format":"int64"
                }
             ],
             "responses":{ 
                "200":{ 
                   "description":"successful operation",
                   "schema":{ 
                      "$ref":"#/definitions/User"
                   }
                },
                "400":{ 
                   "description":"Invalid argument supplied"
                },
                "404":{ 
                   "description":"User not found"
                }
             }
          },
          "put":{ 
             "tags":[ 
                "user"
             ],
             "summary":"Updated user",
             "description":"This can only be done by the logged in user.",
             "operationId":"updateUser",
             "produces":[
                "application/json"
             ],
             "parameters":[ 
                { 
                   "name":"id",
                   "in":"path",
                   "description":"User id that needs to be updated",
                   "required":true,
                   "type":"integer",
                   "format":"int64"
                },
                { 
                   "in":"body",
                   "name":"body",
                   "description":"Updated user object",
                   "required":true,
                   "schema":{ 
                      "$ref":"#/definitions/User"
                   }
                }
             ],
             "responses":{ 
                "400":{ 
                   "description":"Invalid user supplied"
                },
                "404":{ 
                   "description":"User not found"
                }
             }
          },
          "delete":{ 
             "tags":[ 
                "user"
             ],
             "summary":"Delete user",
             "description":"This can only be done by the logged in user.",
             "operationId":"deleteUser",
             "produces":[ 
                "application/json"
             ],
             "parameters":[ 
                { 
                   "name":"id",
                   "in":"path",
                   "description":"The id of the user that needs to be deleted",
                   "required":true,
                   "type":"integer"
                }
             ],
             "responses":{ 
                "400":{ 
                   "description":"Invalid argument supplied"
                },
                "404":{ 
                   "description":"User not found"
                }
             }
          }
       },
       "/users/{id}/orders":{ 
         "get":{ 
            "tags":[ 
               "user"
            ],
            "summary":"Get the orders of a user",
            "description":"",
            "operationId":"getOrdersByUserId",
            "produces":[ 
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"id",
                  "in":"path",
                  "description":"User id for which all orders are fetched.",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               }
            ],
            "responses":{ 
               "200":{ 
                  "description":"successful operation",
                  "schema":{ 
                     "type":"array",
                     "items": {
                        "$ref":"#/definitions/Order"
                     }
                  }
               },
               "400":{ 
                  "description":"Invalid argument supplied"
               },
               "404":{ 
                  "description":"User not found"
               }
            }
         },
         "post":{ 
            "tags":[ 
               "user"
            ],
            "summary":"Create an order for a customer",
            "description":"",
            "operationId":"createOrderFor",
            "produces":[
               "application/json"
            ],
            "parameters":[ 
               { 
                  "name":"id",
                  "in":"path",
                  "description":"User id for which an order is created",
                  "required":true,
                  "type":"integer",
                  "format":"int64"
               },
               { 
                  "in":"body",
                  "name":"body",
                  "description":"New order object",
                  "required":true,
                  "schema":{ 
                     "$ref":"#/definitions/Order"
                  }
               }
            ],
            "responses":{ 
               "400":{ 
                  "description":"Invalid argument supplied"
               },
               "404":{ 
                  "description":"User not found"
               }
            }
         }
      }
    },
    "/orders":{
      "get":{ 
         "tags":[ 
            "order"
         ],
         "summary":"All orders",
         "description":"Lists all orders registered in the system",
         "operationId":"findAllOrders",
         "produces":[ 
            "application/json"
         ],
         "responses":{ 
            "200":{ 
               "description":"successful operation",
               "schema":{ 
                  "type":"array",
                  "items":{ 
                     "$ref":"#/definitions/Order"
                  }
               }
            }
         }
      }
    },
    "/orders/{id}":{ 
      "get":{ 
         "tags":[ 
            "order"
         ],
         "summary":"Get an order by id",
         "description":"",
         "operationId":"getOrderById",
         "produces":[ 
            "application/json"
         ],
         "parameters":[ 
            { 
               "name":"id",
               "in":"path",
               "description":"Order id that needs to be fetched.",
               "required":true,
               "type":"integer",
               "format":"int64"
            }
         ],
         "responses":{ 
            "200":{ 
               "description":"successful operation",
               "schema":{ 
                  "$ref":"#/definitions/Order"
               }
            },
            "400":{ 
               "description":"Invalid argument supplied"
            },
            "404":{ 
               "description":"Order not found"
            }
         }
      },
      "delete":{ 
         "tags":[ 
            "order"
         ],
         "summary":"Delete an order",
         "description":"",
         "operationId":"deleteOrder",
         "produces":[ 
            "application/json"
         ],
         "parameters":[ 
            { 
               "name":"id",
               "in":"path",
               "description":"The id of the order that needs to be deleted",
               "required":true,
               "type":"integer",
               "format":"int64"
            }
         ],
         "responses":{ 
            "400":{ 
               "description":"Invalid argument supplied"
            },
            "404":{ 
               "description":"Order not found"
            }
         }
      }
   },
    "definitions":{ 
       "Order":{ 
          "type":"object",
          "properties":{ 
             "id":{ 
                "type":"integer",
                "format":"int64"
             },
             "shipDate":{ 
                "type":"string",
                "format":"date-time"
             },
             "createdAt":{
                "type":"string",
                "format":"date-time"
             },
             "status":{ 
                "type":"string",
                "description":"Order Status",
                "enum":[ 
                   "placed",
                   "approved",
                   "delivered"
                ]
             },
             "complete":{ 
                "type":"boolean",
                "default":false
             }
          },
          "xml":{ 
             "name":"Order"
          }
       },
       "User":{ 
          "type":"object",
          "properties":{ 
             "id":{ 
                "type":"integer",
                "format":"int64"
             },
             "username":{ 
                "type":"string"
             },
             "firstName":{ 
                "type":"string"
             },
             "lastName":{ 
                "type":"string"
             },
             "email":{ 
                "type":"string"
             },
             "password":{ 
                "type":"string"
             },
             "phone":{ 
                "type":"string"
             }
          },
          "xml":{ 
             "name":"User"
          }
       },
       "Category":{ 
          "type":"object",
          "properties":{ 
             "id":{ 
                "type":"integer",
                "format":"int64"
             },
             "name":{ 
                "type":"string"
             }
          },
          "xml":{ 
             "name":"Category"
          }
       },
       "Product":{ 
          "type":"object",
          "properties":{ 
             "id":{ 
                "type":"integer",
                "format":"int64"
             },
             "name":{ 
                "type":"string"
             },
             "price":{ 
               "type":"integer",
               "format":"int32"
             },
             "quantity":{ 
                "type":"integer",
                "format":"int32"
             }
          },
          "xml":{ 
             "name":"Product"
          }
       },
       "Vendor":{ 
          "type":"object",
          "properties":{ 
             "id":{ 
                "type":"integer",
                "format":"int64"
             },
             "name":{ 
               "type":"string",
               "example":"Adidas"
             }
          },
          "xml":{ 
             "name":"Vendor"
          }
       },
       "ApiResponse":{ 
          "type":"object",
          "properties":{ 
             "code":{ 
                "type":"integer",
                "format":"int32"
             },
             "type":{ 
                "type":"string"
             },
             "message":{ 
                "type":"string"
             }
          }
       }
    }
 }